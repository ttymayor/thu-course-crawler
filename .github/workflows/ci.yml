name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # 每天台灣時間早上 8 點執行 (UTC 00:00)
    - cron: "0 0 * * *"
  workflow_dispatch: # 允許手動觸發

jobs:
  lint-and-test:
    name: Code Quality & Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync

      - name: Run linting with ruff
        run: |
          uv add --dev ruff
          uv run ruff check .
        continue-on-error: true

      - name: Run type checking with mypy
        run: |
          uv add --dev mypy types-requests
          uv run mypy main.py db.py utils/
        continue-on-error: true

      - name: Run tests (if test files exist)
        run: |
          if [ -d "tests" ] || [ -f "test_*.py" ] || [ -f "*_test.py" ]; then
            uv add --dev pytest
            uv run pytest -v
          else
            echo "No test files found, skipping tests"
          fi

  crawl-data:
    name: Data Crawling
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync

      - name: Create .env file
        run: |
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME || 'thu_course' }}" >> .env

      - name: Run crawler
        run: |
          uv run main.py

      - name: Upload logs as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: crawler-logs-${{ github.run_number }}
          path: |
            *.log
            logs/
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync

      - name: Run security scan with bandit
        run: |
          uv add --dev bandit
          uv run bandit -r . -f json -o bandit-report.json
        continue-on-error: true

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report-${{ github.run_number }}
          path: bandit-report.json
          retention-days: 30
